import java.util.*;
class Solution
{
    public static int smallestCommonElement(int[][] mat)
    {
        int m=mat.length,i;
        int n=mat[0].length;
        for(int j=0;j<n;j++)
        {
            int x=mat[0][j];
            for(i=0;i<m;i++)
            {
                if(bsearch(mat[i],x))
                   continue;
                else
                   break;
            }
            if(i==m)
              return x;
        }
        return -1;
    }
    public static boolean bsearch(int a[],int x)
    {
        int l=0,u=a.length-1;
        while(l<=u)
        {
            int mid=(l+u)/2;
            if(x>a[mid])
              l=mid+1;
            else if(x<a[mid])
              u=mid-1;
            else
              return true;
        }
        return false;
    }
    public static void main(String []args)
    {
        Scanner sc=new Scanner(System.in);
        int r=sc.nextInt();
        int c=sc.nextInt();
        int mat[][]=new int [r][c];
        for(int i=0;i<r;i++)
        {
            for(int j=0;j<c;j++)
            {
                mat[i][j]=sc.nextInt();
            }
        }
        System.out.println(smallestCommonElement(mat));
    }
    
}
//LCP
import java.util.*;
class Solution{
    public static void LCP(String s1[])
    {
        Arrays.sort(s1);
        String x=s1[0];
        String y=s1[s1.length-1];
        int m=Math.min(x.length(),y.length());
        StringBuilder sb=new StringBuilder(""imp);
        for(int i=0;i<m;i++)
        {
            if(x.charAt(i)!=y.charAt(i))
                break;
            sb.append(x.charAt(i));     
        }
        if(sb.length()>0)
            System.out.println(sb.toString());
    }
    public static void main(String[] args)
    {
        Scanner sc=new Scanner(System.in);
        String s=sc.nextLine();
        String s1[]=s.split(" ");
        LCP(s1);
    }
}
//median of sorted arrays
import java.util.*;
class MedianofArrays 
{
	static int median(int a[],int b[])
	{
		int i=0,j=0,k=0;
		int c[]=new int[a.length+b.length];
		//logic
		while(i<a.length && j<b.length){
		    if(a[i]<=b[j]){
		        c[k++]=a[i++];
		    }
		    else{
		        c[k++]=b[j++];
		    }
		}
		while(i<a.length){
		    c[k++]=a[i++];
		}
		while(j<b.length){
		    c[k++]=b[j++];
		}
		if(k%2==0){
		    return (c[k/2]+c[(k/2)+1])/2;
		}
		else
		{
		    return c[k/2];
		}
	}
	public static void main(String[] args) 
	{
		Scanner s=new Scanner(System.in);
		System.out.println("Enter the size of the I array");
		int n1=s.nextInt();
		System.out.println("Enter the size of the II array");
		int n2=s.nextInt();
		int a[]=new int[n1];
		int b[]=new int[n2];
		System.out.println("Enter the values of I array");
		for(int i=0;i<n1;i++)
			a[i]=s.nextInt();
		System.out.println("Enter the values of II array");
		for(int i=0;i<n2;i++)
			b[i]=s.nextInt();
		int m=median(a,b);
		System.out.println("Median is "+m);
	}
}
//Max sub array
import java.util.*;
class MaxSubArray 
{
	static int maximum(int a[],int l,int u)
	{
		//logic
		if(l==u)
		{
		    return a[l];
		}
		int mid=(l+u)/2;
		int ls=maximum(a,l,mid);
		int rs=maximum(a,mid+1,u);
		int cs=crossingsum(a,l,mid,u);
		return Math.max(cs,Math.max(ls,rs));
	}
	static int crossingsum(int a[],int l,int m,int u)
	{
	    int sum=0,leftsum=0,rigthsum=0;
	    for(int i=m;i>=1;i--)
	    {
	        sum+=a[i];
	        if(leftsum<sum)
	             leftsum=sum;
	    }
	    sum=0;
	    for(int i=m+1;i<=u;i++)
	    {
	        sum+=a[i];
	        if(rigthsum<sum)
	            rigthsum=sum;
	    }
	    return(Math.max(leftsum+rigthsum,Math.max(leftsum,rigthsum)));
	}
	public static void main(String[] args) 
	{
		Scanner s=new Scanner(System.in);
		System.out.println("Enter the size of the array");
		int n=s.nextInt();
		int a[]=new int[n];
		int i;
		System.out.println("Enter the array values");
		for(i=0;i<n;i++)
			a[i]=s.nextInt();
		int m=maximum(a,0,n-1);
		System.out.println("Sum is "+m);
	}
}
